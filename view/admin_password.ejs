<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700;800&display=swap" rel="stylesheet">
    <!-- icon -->
    <script src="https://kit.fontawesome.com/611c1b2c45.js" crossorigin="anonymous"></script>
    <!-- css -->
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="keypad.css">
    <title>password</title>
    <style>
        .sectionHeader {
            width: 100%;
            height: 9%;
            padding-top: 2rem;
        }

        .adminModeTitle {
            color: #fff;
            margin-left: 3rem;
            font-size: 1.6rem;
        }

        .sectionBody {
            display: flex;
            width: 100%;
            height: 91%;
        }

        .bookingNumberText {
            color: white;
            margin-bottom: 2rem;
            font-size: 2.4rem;
        }

        .keypadBoxArea {
            position: relative;
            width: 50%;
            height: 100%;
            background-color: #011a2457;
        }

        .keypadArea {
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 35rem;
            padding: 2rem;
            height: 37.5rem;
            align-content: center;
            padding-left: 2.5rem;
            text-align: center;
        }

        .logoPartArea {
            position: relative;
            width: 50%;
            height: 100%;
            background-color: #011A24;
        }

        .bigLogo {
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 46rem;
            height: 46rem;
            background: url("./images/big_logo.png") no-repeat;
            background-size: contain;
            background-position: 50% 50%;
        }
    </style>

</head>

<body>
    <!-- ===최상위 컨테이너=== -->
    <div class="wrap">
        <!-- ===레이아웃 영역=== -->
        <section class="layoutArea">
            <section class="sectionHeader">
                <h2 class="adminModeTitle">관리자 모드</h2>
            </section>
            <section class="sectionBody">
                <section class="logoPartArea">
                    <div class="bigLogo"></div>
                </section>
                <!-- 키패드 영역 -->
                <section class="keypadBoxArea">
                    <section id="keypadArea" class="keypadArea">
                        <p class="bookingNumberText">
                            비밀번호 조회
                        </p>
                        <input id="phoneNumber" class="phoneNumber" type="text" placeholder="010-1111-2222">
                        <button class="key" data-value="1">1</button>
                        <button class="key" data-value="2">2</button>
                        <button class="key" data-value="3">3</button>
                        <button class="key" data-value="4">4</button>
                        <button class="key" data-value="5">5</button>
                        <button class="key" data-value="6">6</button>
                        <button class="key" data-value="7">7</button>
                        <button class="key" data-value="8">8</button>
                        <button class="key" data-value="9">9</button>
                        <button class="key delete" data-value="delete"><i class="fa-solid fa-delete-left"></i></button>
                        <button class="key" data-value="0">0</button>
                        <button class="key" data-value="reset">재입력</button>
                        <button id="checkBtn" class="check" data-value="check">확인</button>
                    </section>
                </section>
            </section>
        </section>
        <!-- ===하단바 영역=== -->
        <section class="bottomBar">
            <article class="barButtonsArea">
                <button class="barButtons staffCallButton">직원호출</button>
                <button class="barButtons"><i class="bottomBarIcon fa-solid fa-house"></i></button>
                <button class="barButtons"><i class="bottomBarIcon fa-solid fa-backward"></i></button>
            </article>
            <img class="logoImg" src="images/logo.png" alt="로고이미지">
            <article class="clockArea"><i class="bottomBarIcon fa-regular fa-clock"></i><span
                    class="timeDisplay">12:00</span>
            </article>
        </section>

    </div>
    <script>

        class InputUserNum {
            constructor(id) {
                this.id = id;
            }

            displayData(item) {
                document.getElementById(`phoneNumber`).value = item;
            }

            //Deck 영역
            inputData(id) {
                class Deck {
                    constructor(id) {
                        this.id = id;
                        this.storage = [];
                        this.length = 0;
                    }
                    pushItem(item) {
                        this.storage.push(item);
                    }
                    shiftItem() {
                        return this.storage.shift();
                    }
                    popItem() {
                        return this.storage.pop();
                    }
                    getLength() {
                        this.length = this.storage.length;
                        return this.storage.length;
                    }
                    getLastItem() {
                        return this.storage[this.storage.length - 1];
                    }
                }
                let tempString = "";
                const InputUserNumberDeck = new Deck(this.id);
                //누르는 값을 가져오는 영역
                document.getElementById(`keypadArea`).addEventListener("click", (e) => {
                        if (
                            e.target.dataset.value != null &&
                            e.target.dataset.value != "reset" &&
                            e.target.dataset.value != "delete" &&
                            InputUserNumberDeck.getLength() < 13
                        ) {

                            if (InputUserNumberDeck.getLength() == 3 || InputUserNumberDeck.getLength() == 8) {
                                InputUserNumberDeck.pushItem("-");
                            }

                            if (InputUserNumberDeck.getLength() == 9 || InputUserNumberDeck.getLength() == 4) {
                                // console.log("lastItem" + InputUserNumberDeck.getLastItem());
                                // console.log(InputUserNumberDeck.storage);
                                if (InputUserNumberDeck.getLastItem() != "-") {
                                    InputUserNumberDeck.pushItem("-");
                                }
                            }

                            InputUserNumberDeck.pushItem(e.target.dataset.value);

                            tempString = "";
                            for (let i = 0; i < InputUserNumberDeck.storage.length; i++) {
                                let tempV = "";
                                tempV = InputUserNumberDeck.shiftItem();
                                tempString += tempV;
                                InputUserNumberDeck.pushItem(tempV);
                            }
                            this.displayData(tempString);
                            //console.log(e.target.dataset.value);
                        }
                        switch (e.target.dataset.value) {
                            case "reset":
                                InputUserNumberDeck.storage = [];
                                tempString = "";
                                this.displayData(tempString);
                                break;
                            case "delete":
                                if (InputUserNumberDeck.getLength() === 10 || InputUserNumberDeck.getLength() === 5) {
                                    // console.log(InputUserNumberDeck.storage);
                                    // console.log(InputUserNumberDeck.getLength());
                                    InputUserNumberDeck.popItem();
                                    InputUserNumberDeck.popItem();

                                    tempString = "";
                                    for (let i = 0; i < InputUserNumberDeck.storage.length; i++) {
                                        let tempV = "";
                                        tempV = InputUserNumberDeck.shiftItem();
                                        tempString += tempV;
                                        InputUserNumberDeck.pushItem(tempV);
                                    }
                                    this.displayData(tempString);
                                    break;
                                } else {
                                    console.log(InputUserNumberDeck.storage);
                                    InputUserNumberDeck.popItem();

                                    tempString = "";
                                    for (let i = 0; i < InputUserNumberDeck.storage.length; i++) {
                                        let tempV = "";
                                        tempV = InputUserNumberDeck.shiftItem();
                                        tempString += tempV;
                                        InputUserNumberDeck.pushItem(tempV);
                                    }
                                    this.displayData(tempString);
                                    break;
                                }
                            case "check":
                                InputUserNumberDeck.popItem();
                                let Number = String(InputUserNumberDeck.storage);
                                let realUserNumber = (Number.replace(/-/g, '')).replace(/,/g, '');
                                console.log(realUserNumber);
                        }
                    });
            }
            control() {
                this.inputData();
            }
        }
        const userNumber = new InputUserNum('userNumber');
        userNumber.control();
    </script>
</body>

</html>